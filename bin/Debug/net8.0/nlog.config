<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\chromeriver-sync-service-logs\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!--Console-->
		<target
			name="Console"
			xsi:type="ColoredConsole"
			layout="Arguments: ${scope-property:Arguments}${newline}${newline}${longdate} | ${level:uppercase=true} | ${logger} | ${message:withexception=true}${newline}"
			useDefaultRowHighlightingRules="true">
			<highlight-row condition="level == LogLevel.Info" foregroundColor="Green"/>
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red"/>
			<highlight-row condition="level == LogLevel.Critical" foregroundColor="Red"/>
		<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow"/>
		</target>
		
		<!--JSON-->
		<target name="jsonFile" xsi:type="File" fileName="c:\temp\chromeriver-sync-service-logs\log-file-${shortdate}.json" >
			<layout xsi:type="JsonLayout" includeEventProperties="Boolean" excludeProperties="Comma-separated list (string)">
				<attribute name="level" layout="${level:upperCase=true}"/>
				<attribute name="time" layout="${longdate}" />
				<attribute name="callsite" layout="${callsite}" />
				<attribute name="scope" encode="false">
					<layout xsi:type="JsonLayout" >
						<attribute name="transactionId" layout="${scope-property:TransactionId}" />
						<attribute name="arguments" layout="${scope-property:Arguments}" />
					</layout>
				</attribute>
				<attribute name="message" layout="${message}" />
				<attribute name="exception" encode="false">
					<layout xsi:type="JsonLayout">
						<attribute name="type" layout="${exception:format=type}" />
						<attribute name="message" layout="${exception:format=message}" />
						<attribute name="stacktrace" layout="${exception:format=tostring}" />
					</layout>
				</attribute>
			</layout>
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Info" writeTo="jsonFile,Console" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="Console" final="true" />
	</rules>
</nlog>